# Generated by Django 3.2.4 on 2021-07-12 20:37

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalityComponent',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('letterCode', models.CharField(choices=[('E', 'Extrovert'), ('I', 'Introvert'), ('S', 'Sensing'), ('N', 'Intuitive'), ('T', 'Thinking'), ('F', 'Feeling'), ('P', 'Perceptive'), ('J', 'Judging')], max_length=1, unique=True)),
                ('description', models.TextField()),
                ('title', models.CharField(editable=False, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSet',
            fields=[
                ('_setId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('_sectorId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('sectorName', models.CharField(max_length=200, unique=True)),
                ('sectorDescription', models.TextField()),
                ('associatedIcon', models.CharField(blank=True, max_length=100, null=True)),
                ('associatedColour', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('_questionId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('personalityFactor', models.CharField(choices=[('extraversion', 'Extraversion Factor Question'), ('sensing', 'Sensing Factor Question'), ('thinking', 'Thinking Factor Question'), ('perceiving', 'Perceiving Factor Question')], max_length=12)),
                ('multiplier', models.IntegerField(choices=[(1, 'Positive Factor'), (-1, 'Negative Factor')])),
                ('questionContent', models.TextField()),
                ('questionSetNumber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recommender.questionset')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityType',
            fields=[
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('typeCode', models.CharField(max_length=4, unique=True)),
                ('personalityTitle', models.CharField(max_length=200)),
                ('personalityDescription', models.TextField()),
                ('associatedComponents', models.ManyToManyField(to='recommender.PersonalityComponent')),
            ],
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('_careerId', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('careerTitle', models.CharField(max_length=200, unique=True)),
                ('careerDescription', models.TextField()),
                ('extraversionScore', models.IntegerField()),
                ('sensingScore', models.IntegerField()),
                ('thinkingScore', models.IntegerField()),
                ('perceivingScore', models.IntegerField()),
                ('avgSalary', models.IntegerField(blank=True, null=True)),
                ('associatedImage', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='')),
                ('associatedPersonalityType', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recommender.personalitytype')),
                ('associatedSector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recommender.sector')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('extraversionScore', models.IntegerField(blank=True, default=0, null=True)),
                ('sensingScore', models.IntegerField(blank=True, default=0, null=True)),
                ('thinkingScore', models.IntegerField(blank=True, default=0, null=True)),
                ('perceivingScore', models.IntegerField(blank=True, default=0, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('personalityType', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recommender.personalitytype')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
